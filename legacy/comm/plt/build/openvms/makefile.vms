#
# Simple and crazy makefile for OpenVMS (libplt)
#

REPOSITORY = acplt$$repository

CXX = cxx
CXX_FLAGS = /optimize /float=ieee_float
# CXX_FLAGS = /debug

CXX_EXTRA_FLAGS = /notemplate_define /repository=($(REPOSITORY))

CXX_DEFINES = PLT_USE_BUFFERED_STREAMS=1,PLT_SYSTEM_OPENVMS=1,NDEBUG=1

AR = library

### Filename conventions
O = .obj
A = .olb
EXE = .exe

PLTDIR = [-.-]
SRCDIR = [-.-.src]
CXX_INCLUDES = ".","../../include"


.SUFFIXES:

.SUFFIXES: .cpp $(O) $(A) $(EXE)

### The VPATH mechanism isn't supported yet...
#VPATH = "../../src"


### Include generic part (generic dependencies)
include [-]generic.mk

### Include auto dependencies
include [-]depend.vms


$(LIBPLT_OBJECTS):	%.obj: [-.-.src]%.cpp
	-if (f$$search("$@").nes."") then del $@;* /nolog
	$(CXX) $(CXX_EXTRA_FLAGS) $(CXX_FLAGS) /include=($(CXX_INCLUDES)) \
		/define=($(CXX_DEFINES)) $<

libplt$(A):	$(LIBPLT_OBJECTS)
	-if (f$$search("$@").nes."") then del $@;* /nolog
	$(AR) /create libplt$(A) $^

clean:
	if (f$$search("*$(O)").nes."") then del *$(O);* /nolog
	if (f$$search("libplt$(A)").nes."") then del libplt$(A);* /nolog


# EOF makefile.vms