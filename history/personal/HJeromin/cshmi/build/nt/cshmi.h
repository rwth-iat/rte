/*
*   This file was generated by the ACPLT/OV C-Code Generator.
*
*   C-Code Generator version: 1.6.4
*   ACPLT/OV library version: 1.8.0
*   Date of file generation:  25-Aug-2011 ( 8:58:27)
*
*   DO NOT EDIT THIS FILE!
*/

#ifndef OV_LIBRARY_cshmi_H_INCLUDED
#define OV_LIBRARY_cshmi_H_INCLUDED

#include "libov/ov_library.h"
#include "libov/ov_structure.h"
#include "libov/ov_class.h"
#include "libov/ov_association.h"
#include "libov/ov_variable.h"
#include "libov/ov_part.h"
#include "libov/ov_operation.h"
#include "ov.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef OV_COMPILE_LIBRARY_cshmi
#if OV_COMPILER_BORLAND
#define OV_VAREXTERN extern
#else
#define OV_VAREXTERN OV_DLLVAREXPORT
#endif
#define OV_FNCEXTERN OV_DLLFNCEXPORT
#else
#define OV_VAREXTERN OV_DLLVARIMPORT
#define OV_FNCEXTERN OV_DLLVARIMPORT
#endif

#define OV_BIPT_cshmi_Object OV_INSTPTR_ov_domain
#define OV_BVPT_cshmi_Object OV_VTBLPTR_ov_domain

#define OV_INSTBODY_cshmi_Object \
    OV_INSTBODY_ov_domain \
    OV_STRING v_baseKsPath;

#define OV_CIB_cshmi_Object \
    OV_CIB_ov_domain \
    int is_of_class_cshmi_Object:1;

#define OV_STATICINSTBODY_cshmi_Object

#define OV_BIPT_cshmi_Element OV_INSTPTR_cshmi_Object
#define OV_BVPT_cshmi_Element OV_VTBLPTR_cshmi_Object

#define OV_INSTBODY_cshmi_Element \
    OV_INSTBODY_cshmi_Object \
    OV_BOOL v_visible; \
    OV_UINT v_zindex; \
    OV_STRING v_stroke; \
    OV_STRING v_fill; \
    OV_SINGLE v_opacity;

#define OV_CIB_cshmi_Element \
    OV_CIB_cshmi_Object \
    int is_of_class_cshmi_Element:1;

#define OV_STATICINSTBODY_cshmi_Element

#define OV_BIPT_cshmi_Line OV_INSTPTR_cshmi_Element
#define OV_BVPT_cshmi_Line OV_VTBLPTR_cshmi_Element

#define OV_INSTBODY_cshmi_Line \
    OV_INSTBODY_cshmi_Element \
    OV_SINGLE v_x1; \
    OV_SINGLE v_y1; \
    OV_SINGLE v_x2; \
    OV_SINGLE v_y2;

#define OV_CIB_cshmi_Line \
    OV_CIB_cshmi_Element \
    int is_of_class_cshmi_Line:1;

#define OV_STATICINSTBODY_cshmi_Line

#define OV_BIPT_cshmi_Circle OV_INSTPTR_cshmi_Element
#define OV_BVPT_cshmi_Circle OV_VTBLPTR_cshmi_Element

#define OV_INSTBODY_cshmi_Circle \
    OV_INSTBODY_cshmi_Element \
    OV_SINGLE v_cx; \
    OV_SINGLE v_cy; \
    OV_SINGLE v_r;

#define OV_CIB_cshmi_Circle \
    OV_CIB_cshmi_Element \
    int is_of_class_cshmi_Circle:1;

#define OV_STATICINSTBODY_cshmi_Circle

#define OV_BIPT_cshmi_Ellipse OV_INSTPTR_cshmi_Element
#define OV_BVPT_cshmi_Ellipse OV_VTBLPTR_cshmi_Element

#define OV_INSTBODY_cshmi_Ellipse \
    OV_INSTBODY_cshmi_Element \
    OV_SINGLE v_cx; \
    OV_SINGLE v_cy; \
    OV_SINGLE v_rx; \
    OV_SINGLE v_ry;

#define OV_CIB_cshmi_Ellipse \
    OV_CIB_cshmi_Element \
    int is_of_class_cshmi_Ellipse:1;

#define OV_STATICINSTBODY_cshmi_Ellipse

#define OV_BIPT_cshmi_Path OV_INSTPTR_cshmi_Element
#define OV_BVPT_cshmi_Path OV_VTBLPTR_cshmi_Element

#define OV_INSTBODY_cshmi_Path \
    OV_INSTBODY_cshmi_Element \
    OV_STRING_VEC v_d;

#define OV_CIB_cshmi_Path \
    OV_CIB_cshmi_Element \
    int is_of_class_cshmi_Path:1;

#define OV_STATICINSTBODY_cshmi_Path

#define OV_BIPT_cshmi_Polygon OV_INSTPTR_cshmi_Element
#define OV_BVPT_cshmi_Polygon OV_VTBLPTR_cshmi_Element

#define OV_INSTBODY_cshmi_Polygon \
    OV_INSTBODY_cshmi_Element \
    OV_SINGLE_VEC v_points;

#define OV_CIB_cshmi_Polygon \
    OV_CIB_cshmi_Element \
    int is_of_class_cshmi_Polygon:1;

#define OV_STATICINSTBODY_cshmi_Polygon

#define OV_BIPT_cshmi_Polyline OV_INSTPTR_cshmi_Element
#define OV_BVPT_cshmi_Polyline OV_VTBLPTR_cshmi_Element

#define OV_INSTBODY_cshmi_Polyline \
    OV_INSTBODY_cshmi_Element \
    OV_SINGLE_VEC v_points;

#define OV_CIB_cshmi_Polyline \
    OV_CIB_cshmi_Element \
    int is_of_class_cshmi_Polyline:1;

#define OV_STATICINSTBODY_cshmi_Polyline

#define OV_BIPT_cshmi_Rectangle OV_INSTPTR_cshmi_Element
#define OV_BVPT_cshmi_Rectangle OV_VTBLPTR_cshmi_Element

#define OV_INSTBODY_cshmi_Rectangle \
    OV_INSTBODY_cshmi_Element \
    OV_SINGLE v_x; \
    OV_SINGLE v_y; \
    OV_SINGLE v_width; \
    OV_SINGLE v_height;

#define OV_CIB_cshmi_Rectangle \
    OV_CIB_cshmi_Element \
    int is_of_class_cshmi_Rectangle:1;

#define OV_STATICINSTBODY_cshmi_Rectangle

#define OV_BIPT_cshmi_Text OV_INSTPTR_cshmi_Element
#define OV_BVPT_cshmi_Text OV_VTBLPTR_cshmi_Element

#define OV_INSTBODY_cshmi_Text \
    OV_INSTBODY_cshmi_Element \
    OV_SINGLE v_x; \
    OV_SINGLE v_y; \
    OV_STRING v_content; \
    OV_STRING v_fontsize; \
    OV_STRING v_fontstyle; \
    OV_STRING v_fontweight; \
    OV_STRING v_fontfamily; \
    OV_STRING v_horalign; \
    OV_STRING v_veralign;

#define OV_CIB_cshmi_Text \
    OV_CIB_cshmi_Element \
    int is_of_class_cshmi_Text:1;

#define OV_STATICINSTBODY_cshmi_Text

#define OV_BIPT_cshmi_Group OV_INSTPTR_cshmi_Element
#define OV_BVPT_cshmi_Group OV_VTBLPTR_cshmi_Element

#define OV_INSTBODY_cshmi_Group \
    OV_INSTBODY_cshmi_Element \
    OV_SINGLE v_x; \
    OV_SINGLE v_y; \
    OV_SINGLE v_width; \
    OV_SINGLE v_height;

#define OV_CIB_cshmi_Group \
    OV_CIB_cshmi_Element \
    int is_of_class_cshmi_Group:1;

#define OV_STATICINSTBODY_cshmi_Group

#define OV_BIPT_cshmi_Action OV_INSTPTR_cshmi_Object
#define OV_BVPT_cshmi_Action OV_VTBLPTR_cshmi_Object

#define OV_INSTBODY_cshmi_Action \
    OV_INSTBODY_cshmi_Object \
    OV_BOOL v_cyclic; \
    OV_TIME_SPAN v_cyctime;

#define OV_CIB_cshmi_Action \
    OV_CIB_cshmi_Object \
    int is_of_class_cshmi_Action:1;

#define OV_STATICINSTBODY_cshmi_Action

#define OV_BIPT_cshmi_GetValue OV_INSTPTR_cshmi_Action
#define OV_BVPT_cshmi_GetValue OV_VTBLPTR_cshmi_Action

#define OV_INSTBODY_cshmi_GetValue \
    OV_INSTBODY_cshmi_Action \
    OV_STRING v_ksvar; \
    OV_STRING v_elemvar; \
    OV_STRING v_globalvar; \
    OV_STRING v_eventvar; \
    OV_ANY v_value;

#define OV_CIB_cshmi_GetValue \
    OV_CIB_cshmi_Action \
    int is_of_class_cshmi_GetValue:1;

#define OV_STATICINSTBODY_cshmi_GetValue

#define OV_BIPT_cshmi_SetVar OV_INSTPTR_cshmi_Action
#define OV_BVPT_cshmi_SetVar OV_VTBLPTR_cshmi_Action

#define OV_INSTBODY_cshmi_SetVar \
    OV_INSTBODY_cshmi_Action \
    OV_STRING v_ksvar; \
    OV_STRING v_elemvar; \
    OV_STRING v_globalvar; \
    OV_INST_cshmi_GetValue p_value;

#define OV_CIB_cshmi_SetVar \
    OV_CIB_cshmi_Action \
    int is_of_class_cshmi_SetVar:1;

#define OV_STATICINSTBODY_cshmi_SetVar

#define OV_BIPT_cshmi_IfThenElse OV_INSTPTR_cshmi_Action
#define OV_BVPT_cshmi_IfThenElse OV_VTBLPTR_cshmi_Action

#define OV_INSTBODY_cshmi_IfThenElse \
    OV_INSTBODY_cshmi_Action \
    OV_BOOL v_anycond; \
    OV_INST_ov_domain p_if; \
    OV_INST_ov_domain p_then; \
    OV_INST_ov_domain p_else;

#define OV_CIB_cshmi_IfThenElse \
    OV_CIB_cshmi_Action \
    int is_of_class_cshmi_IfThenElse:1;

#define OV_STATICINSTBODY_cshmi_IfThenElse

#define OV_BIPT_cshmi_Condition OV_INSTPTR_cshmi_Object
#define OV_BVPT_cshmi_Condition OV_VTBLPTR_cshmi_Object

#define OV_INSTBODY_cshmi_Condition \
    OV_INSTBODY_cshmi_Object

#define OV_CIB_cshmi_Condition \
    OV_CIB_cshmi_Object \
    int is_of_class_cshmi_Condition:1;

#define OV_STATICINSTBODY_cshmi_Condition

#define OV_BIPT_cshmi_Compare OV_INSTPTR_cshmi_Condition
#define OV_BVPT_cshmi_Compare OV_VTBLPTR_cshmi_Condition

#define OV_INSTBODY_cshmi_Compare \
    OV_INSTBODY_cshmi_Condition \
    OV_STRING v_comptype; \
    OV_INST_cshmi_GetValue p_value1; \
    OV_INST_cshmi_GetValue p_value2;

#define OV_CIB_cshmi_Compare \
    OV_CIB_cshmi_Condition \
    int is_of_class_cshmi_Compare:1;

#define OV_STATICINSTBODY_cshmi_Compare

#define OV_BIPT_cshmi_Gesture OV_INSTPTR_cshmi_Object
#define OV_BVPT_cshmi_Gesture OV_VTBLPTR_cshmi_Object

#define OV_INSTBODY_cshmi_Gesture \
    OV_INSTBODY_cshmi_Object

#define OV_CIB_cshmi_Gesture \
    OV_CIB_cshmi_Object \
    int is_of_class_cshmi_Gesture:1;

#define OV_STATICINSTBODY_cshmi_Gesture

OV_TYPEDEF_INSTANCE(cshmi_Object);
OV_TYPEDEF_INSTANCE(cshmi_Element);
OV_TYPEDEF_INSTANCE(cshmi_Line);
OV_TYPEDEF_INSTANCE(cshmi_Circle);
OV_TYPEDEF_INSTANCE(cshmi_Ellipse);
OV_TYPEDEF_INSTANCE(cshmi_Path);
OV_TYPEDEF_INSTANCE(cshmi_Polygon);
OV_TYPEDEF_INSTANCE(cshmi_Polyline);
OV_TYPEDEF_INSTANCE(cshmi_Rectangle);
OV_TYPEDEF_INSTANCE(cshmi_Text);
OV_TYPEDEF_INSTANCE(cshmi_Group);
OV_TYPEDEF_INSTANCE(cshmi_Action);
OV_TYPEDEF_INSTANCE(cshmi_GetValue);
OV_TYPEDEF_INSTANCE(cshmi_SetVar);
OV_TYPEDEF_INSTANCE(cshmi_IfThenElse);
OV_TYPEDEF_INSTANCE(cshmi_Condition);
OV_TYPEDEF_INSTANCE(cshmi_Compare);
OV_TYPEDEF_INSTANCE(cshmi_Gesture);

#define OV_VTBLBODY_cshmi_Object \
    OV_VTBLBODY_ov_domain

#define OV_VTBLBODY_cshmi_Element \
    OV_VTBLBODY_cshmi_Object

#define OV_VTBLBODY_cshmi_Line \
    OV_VTBLBODY_cshmi_Element

#define OV_VTBLBODY_cshmi_Circle \
    OV_VTBLBODY_cshmi_Element

#define OV_VTBLBODY_cshmi_Ellipse \
    OV_VTBLBODY_cshmi_Element

#define OV_VTBLBODY_cshmi_Path \
    OV_VTBLBODY_cshmi_Element

#define OV_VTBLBODY_cshmi_Polygon \
    OV_VTBLBODY_cshmi_Element

#define OV_VTBLBODY_cshmi_Polyline \
    OV_VTBLBODY_cshmi_Element

#define OV_VTBLBODY_cshmi_Rectangle \
    OV_VTBLBODY_cshmi_Element

#define OV_VTBLBODY_cshmi_Text \
    OV_VTBLBODY_cshmi_Element

#define OV_VTBLBODY_cshmi_Group \
    OV_VTBLBODY_cshmi_Element

#define OV_VTBLBODY_cshmi_Action \
    OV_VTBLBODY_cshmi_Object

#define OV_VTBLBODY_cshmi_GetValue \
    OV_VTBLBODY_cshmi_Action

#define OV_VTBLBODY_cshmi_SetVar \
    OV_VTBLBODY_cshmi_Action

#define OV_VTBLBODY_cshmi_IfThenElse \
    OV_VTBLBODY_cshmi_Action

#define OV_VTBLBODY_cshmi_Condition \
    OV_VTBLBODY_cshmi_Object

#define OV_VTBLBODY_cshmi_Compare \
    OV_VTBLBODY_cshmi_Condition

#define OV_VTBLBODY_cshmi_Gesture \
    OV_VTBLBODY_cshmi_Object

OV_TYPEDEF_VTABLE(cshmi_Object);
OV_TYPEDEF_VTABLE(cshmi_Element);
OV_TYPEDEF_VTABLE(cshmi_Line);
OV_TYPEDEF_VTABLE(cshmi_Circle);
OV_TYPEDEF_VTABLE(cshmi_Ellipse);
OV_TYPEDEF_VTABLE(cshmi_Path);
OV_TYPEDEF_VTABLE(cshmi_Polygon);
OV_TYPEDEF_VTABLE(cshmi_Polyline);
OV_TYPEDEF_VTABLE(cshmi_Rectangle);
OV_TYPEDEF_VTABLE(cshmi_Text);
OV_TYPEDEF_VTABLE(cshmi_Group);
OV_TYPEDEF_VTABLE(cshmi_Action);
OV_TYPEDEF_VTABLE(cshmi_GetValue);
OV_TYPEDEF_VTABLE(cshmi_SetVar);
OV_TYPEDEF_VTABLE(cshmi_IfThenElse);
OV_TYPEDEF_VTABLE(cshmi_Condition);
OV_TYPEDEF_VTABLE(cshmi_Compare);
OV_TYPEDEF_VTABLE(cshmi_Gesture);

OV_DLLFNCEXPORT OV_STRING cshmi_Object_baseKsPath_get(
    OV_INSTPTR_cshmi_Object pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Object_baseKsPath_set(
    OV_INSTPTR_cshmi_Object pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_BOOL cshmi_Element_visible_get(
    OV_INSTPTR_cshmi_Element pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Element_visible_set(
    OV_INSTPTR_cshmi_Element pobj,
    const OV_BOOL value
);

OV_DLLFNCEXPORT OV_UINT cshmi_Element_zindex_get(
    OV_INSTPTR_cshmi_Element pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Element_zindex_set(
    OV_INSTPTR_cshmi_Element pobj,
    const OV_UINT value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Element_stroke_get(
    OV_INSTPTR_cshmi_Element pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Element_stroke_set(
    OV_INSTPTR_cshmi_Element pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Element_fill_get(
    OV_INSTPTR_cshmi_Element pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Element_fill_set(
    OV_INSTPTR_cshmi_Element pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Element_opacity_get(
    OV_INSTPTR_cshmi_Element pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Element_opacity_set(
    OV_INSTPTR_cshmi_Element pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Line_x1_get(
    OV_INSTPTR_cshmi_Line pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Line_x1_set(
    OV_INSTPTR_cshmi_Line pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Line_y1_get(
    OV_INSTPTR_cshmi_Line pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Line_y1_set(
    OV_INSTPTR_cshmi_Line pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Line_x2_get(
    OV_INSTPTR_cshmi_Line pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Line_x2_set(
    OV_INSTPTR_cshmi_Line pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Line_y2_get(
    OV_INSTPTR_cshmi_Line pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Line_y2_set(
    OV_INSTPTR_cshmi_Line pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Circle_cx_get(
    OV_INSTPTR_cshmi_Circle pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Circle_cx_set(
    OV_INSTPTR_cshmi_Circle pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Circle_cy_get(
    OV_INSTPTR_cshmi_Circle pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Circle_cy_set(
    OV_INSTPTR_cshmi_Circle pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Circle_r_get(
    OV_INSTPTR_cshmi_Circle pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Circle_r_set(
    OV_INSTPTR_cshmi_Circle pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Ellipse_cx_get(
    OV_INSTPTR_cshmi_Ellipse pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Ellipse_cx_set(
    OV_INSTPTR_cshmi_Ellipse pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Ellipse_cy_get(
    OV_INSTPTR_cshmi_Ellipse pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Ellipse_cy_set(
    OV_INSTPTR_cshmi_Ellipse pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Ellipse_rx_get(
    OV_INSTPTR_cshmi_Ellipse pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Ellipse_rx_set(
    OV_INSTPTR_cshmi_Ellipse pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Ellipse_ry_get(
    OV_INSTPTR_cshmi_Ellipse pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Ellipse_ry_set(
    OV_INSTPTR_cshmi_Ellipse pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_STRING *cshmi_Path_d_get(
    OV_INSTPTR_cshmi_Path pobj,
    OV_UINT *pveclen
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Path_d_set(
    OV_INSTPTR_cshmi_Path pobj,
    const OV_STRING *pvalue,
    const OV_UINT veclen
);

OV_DLLFNCEXPORT OV_SINGLE *cshmi_Polygon_points_get(
    OV_INSTPTR_cshmi_Polygon pobj,
    OV_UINT *pveclen
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Polygon_points_set(
    OV_INSTPTR_cshmi_Polygon pobj,
    const OV_SINGLE *pvalue,
    const OV_UINT veclen
);

OV_DLLFNCEXPORT OV_SINGLE *cshmi_Polyline_points_get(
    OV_INSTPTR_cshmi_Polyline pobj,
    OV_UINT *pveclen
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Polyline_points_set(
    OV_INSTPTR_cshmi_Polyline pobj,
    const OV_SINGLE *pvalue,
    const OV_UINT veclen
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Rectangle_x_get(
    OV_INSTPTR_cshmi_Rectangle pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Rectangle_x_set(
    OV_INSTPTR_cshmi_Rectangle pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Rectangle_y_get(
    OV_INSTPTR_cshmi_Rectangle pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Rectangle_y_set(
    OV_INSTPTR_cshmi_Rectangle pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Rectangle_width_get(
    OV_INSTPTR_cshmi_Rectangle pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Rectangle_width_set(
    OV_INSTPTR_cshmi_Rectangle pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Rectangle_height_get(
    OV_INSTPTR_cshmi_Rectangle pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Rectangle_height_set(
    OV_INSTPTR_cshmi_Rectangle pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Text_x_get(
    OV_INSTPTR_cshmi_Text pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Text_x_set(
    OV_INSTPTR_cshmi_Text pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Text_y_get(
    OV_INSTPTR_cshmi_Text pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Text_y_set(
    OV_INSTPTR_cshmi_Text pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Text_content_get(
    OV_INSTPTR_cshmi_Text pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Text_content_set(
    OV_INSTPTR_cshmi_Text pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Text_fontsize_get(
    OV_INSTPTR_cshmi_Text pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Text_fontsize_set(
    OV_INSTPTR_cshmi_Text pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Text_fontstyle_get(
    OV_INSTPTR_cshmi_Text pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Text_fontstyle_set(
    OV_INSTPTR_cshmi_Text pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Text_fontweight_get(
    OV_INSTPTR_cshmi_Text pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Text_fontweight_set(
    OV_INSTPTR_cshmi_Text pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Text_fontfamily_get(
    OV_INSTPTR_cshmi_Text pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Text_fontfamily_set(
    OV_INSTPTR_cshmi_Text pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Text_horalign_get(
    OV_INSTPTR_cshmi_Text pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Text_horalign_set(
    OV_INSTPTR_cshmi_Text pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Text_veralign_get(
    OV_INSTPTR_cshmi_Text pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Text_veralign_set(
    OV_INSTPTR_cshmi_Text pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Group_x_get(
    OV_INSTPTR_cshmi_Group pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Group_x_set(
    OV_INSTPTR_cshmi_Group pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Group_y_get(
    OV_INSTPTR_cshmi_Group pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Group_y_set(
    OV_INSTPTR_cshmi_Group pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Group_width_get(
    OV_INSTPTR_cshmi_Group pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Group_width_set(
    OV_INSTPTR_cshmi_Group pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_SINGLE cshmi_Group_height_get(
    OV_INSTPTR_cshmi_Group pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Group_height_set(
    OV_INSTPTR_cshmi_Group pobj,
    const OV_SINGLE value
);

OV_DLLFNCEXPORT OV_BOOL cshmi_Action_cyclic_get(
    OV_INSTPTR_cshmi_Action pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Action_cyclic_set(
    OV_INSTPTR_cshmi_Action pobj,
    const OV_BOOL value
);

OV_DLLFNCEXPORT OV_TIME_SPAN *cshmi_Action_cyctime_get(
    OV_INSTPTR_cshmi_Action pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Action_cyctime_set(
    OV_INSTPTR_cshmi_Action pobj,
    const OV_TIME_SPAN *pvalue
);

OV_DLLFNCEXPORT OV_STRING cshmi_GetValue_ksvar_get(
    OV_INSTPTR_cshmi_GetValue pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_GetValue_ksvar_set(
    OV_INSTPTR_cshmi_GetValue pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_GetValue_elemvar_get(
    OV_INSTPTR_cshmi_GetValue pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_GetValue_elemvar_set(
    OV_INSTPTR_cshmi_GetValue pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_GetValue_globalvar_get(
    OV_INSTPTR_cshmi_GetValue pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_GetValue_globalvar_set(
    OV_INSTPTR_cshmi_GetValue pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_GetValue_eventvar_get(
    OV_INSTPTR_cshmi_GetValue pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_GetValue_eventvar_set(
    OV_INSTPTR_cshmi_GetValue pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_ANY *cshmi_GetValue_value_get(
    OV_INSTPTR_cshmi_GetValue pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_GetValue_value_set(
    OV_INSTPTR_cshmi_GetValue pobj,
    const OV_ANY *pvalue
);

OV_DLLFNCEXPORT OV_STRING cshmi_SetVar_ksvar_get(
    OV_INSTPTR_cshmi_SetVar pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_SetVar_ksvar_set(
    OV_INSTPTR_cshmi_SetVar pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_SetVar_elemvar_get(
    OV_INSTPTR_cshmi_SetVar pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_SetVar_elemvar_set(
    OV_INSTPTR_cshmi_SetVar pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_STRING cshmi_SetVar_globalvar_get(
    OV_INSTPTR_cshmi_SetVar pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_SetVar_globalvar_set(
    OV_INSTPTR_cshmi_SetVar pobj,
    const OV_STRING value
);

OV_DLLFNCEXPORT OV_BOOL cshmi_IfThenElse_anycond_get(
    OV_INSTPTR_cshmi_IfThenElse pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_IfThenElse_anycond_set(
    OV_INSTPTR_cshmi_IfThenElse pobj,
    const OV_BOOL value
);

OV_DLLFNCEXPORT OV_STRING cshmi_Compare_comptype_get(
    OV_INSTPTR_cshmi_Compare pobj
);

OV_DLLFNCEXPORT OV_RESULT cshmi_Compare_comptype_set(
    OV_INSTPTR_cshmi_Compare pobj,
    const OV_STRING value
);

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Object;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Object;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Element;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Element;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Line;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Line;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Circle;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Circle;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Ellipse;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Ellipse;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Path;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Path;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Polygon;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Polygon;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Polyline;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Polyline;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Rectangle;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Rectangle;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Text;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Text;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Group;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Group;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Action;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Action;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_GetValue;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_GetValue;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_SetVar;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_SetVar;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_IfThenElse;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_IfThenElse;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Condition;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Condition;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Compare;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Compare;

extern OV_CLASS_DEF OV_CLASS_DEF_cshmi_Gesture;
OV_VAREXTERN OV_INSTPTR_ov_class pclass_cshmi_Gesture;

extern OV_LIBRARY_DEF OV_LIBRARY_DEF_cshmi;

OV_RESULT ov_library_setglobalvars_cshmi(void);

OV_DLLFNCEXPORT OV_LIBRARY_DEF *ov_library_open_cshmi(void);

#undef OV_VAREXTERN
#undef OV_FNCEXTERN

#ifdef __cplusplus
}
#endif

#endif

/*
*   End of file
*/
