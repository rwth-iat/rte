/*
*	Copyright (C) 2010
*	Chair of Process Control Engineering,
*	RWTH Aachen University
*	All rights reserved.
*
*	Redistribution and use in source and binary forms, with or without
*	modification, are permitted provided that the following conditions
*	are met:
*	1. Redistributions of source code must retain the above copyright
*	   notice, this list of conditions and the following disclaimer.
*	2. Redistributions in binary form must print or display the above
*	   copyright notice either during startup or must have a means for
*	   the user to view the copyright notice.
*	3. Redistributions in binary form must reproduce the above copyright
*	   notice, this list of conditions and the following disclaimer in
*		the documentation and/or other materials provided with the
*		distribution.
*	4. Neither the name of the Chair of Process Control Engineering nor
*		the name of the Aachen University of Technology may be used to
*		endorse or promote products derived from this software without
*		specific prior written permission.
*
*	THIS SOFTWARE IS PROVIDED BY THE CHAIR OF PROCESS CONTROL ENGINEERING
*	``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
*	LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
*	A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE CHAIR OF
*	PROCESS CONTROL ENGINEERING BE LIABLE FOR ANY DIRECT, INDIRECT,
*	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
*	BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
*	OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
*	AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
*	LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
*	WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*	POSSIBILITY OF SUCH DAMAGE.
*/

/***********************************************************************
*
*	File
*	-----
*	sfc.ovm - ACPLT Sequntial Function Chart Library model
*
*	Authors:
*	--------
*	Yu				Liyong Yu <liyong.yu@plt.rwth.aachen.de>
*
*	CVS:
*	----
*	$Revision: 1.5 $
*	$Date: 2011-07-03 09:03:57 $
*
*	History:
*	--------
*	02-July-2011		Yu		V0.1
*		-	Creation.
*
***********************************************************************/

#include "fc.ovm"

LIBRARY sfc

  VERSION   = "0.1";
  AUTHOR    = "Liyong Yu";
  COPYRIGHT = "2011 Lehrstuhl fuer Prozessleittechnik, RWTH Aachen";
  COMMENT   = "ACPLT Sequntial Function Chart Library";

  CLASS sfcHeader : CLASS fc/functionChart
		IS_INSTANTIABLE;
		COMMENT = "SFC header";
		VARIABLES
			order			: STRING	HAS_ACCESSORS FLAGS = "p"	COMMENT = "incoming command";
			activeStep  	: STRING	FLAGS = "o"	COMMENT = "active step" INITIALVALUE = "INIT";
			error			: BOOL		FLAGS = "o"	COMMENT = "error";
			errorDetail		: STRING	FLAGS = "o"	COMMENT = "error details";
		END_VARIABLES;
		PARTS
      		ACTs 			: CLASS ov/domain;
      		TCs 			: CLASS ov/domain;
    	END_PARTS;
    	OPERATIONS
        	constructor		:	C_FUNCTION	<OV_FNC_CONSTRUCTOR>;
         	typemethod 		: 	C_FUNCTION 	<FB_FNC_TYPEMETHOD>;
    	END_OPERATIONS;
  END_CLASS;

  CLASS step : CLASS fb/functionblock
		IS_INSTANTIABLE;
  	COMMENT = "SFC step";
  	VARIABLES
			internalID		:UINT  		FLAGS = "n"	COMMENT = "internal ID";
			X				:BOOL		FLAGS = "o"	COMMENT = "step flag (active or inactive state of a step)";
			T				:TIME_SPAN 	FLAGS = "o"	COMMENT = "elapsed time since initiation of a step";
			evTransTrigger  :BOOL		FLAGS = "o"	COMMENT = "Event: transition triggers";
			error			:BOOL		FLAGS = "o"	COMMENT = "error";
			errorDetail		:STRING		FLAGS = "o"	COMMENT = "error details";	
	END_VARIABLES;
	PARTS
      		entry 	: CLASS fb/task;
      		do  	: CLASS fb/task;
      		trans  	: CLASS fb/task;	
      		exit 	: CLASS fb/task;
    END_PARTS;
  	OPERATIONS
  			constructor	:	C_FUNCTION	<OV_FNC_CONSTRUCTOR>;
      		typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
    END_OPERATIONS;
  END_CLASS;
  
  CLASS transition: CLASS fb/functionblock
	IS_INSTANTIABLE;
  	COMMENT = "SFC transition";
    VARIABLES
      result 			: BOOL 		FLAGS = "i" COMMENT = "The result of the executed transition";
      error				: BOOL		FLAGS = "o"	COMMENT = "error";
	  errorDetail		: STRING	FLAGS = "o"	COMMENT = "error details";
    END_VARIABLES;
    OPERATIONS
    	constructor		: C_FUNCTION	<OV_FNC_CONSTRUCTOR>;
		typemethod 		: C_FUNCTION 	<FB_FNC_TYPEMETHOD>;
    END_OPERATIONS;
  END_CLASS;
  

  /* Associations */
  
  /* Connections from steps to next transitions. */
  ASSOCIATION nextTransitions : ONE_TO_MANY
    IS_LOCAL;
    PARENT prevStep  : CLASS sfc/step;
    CHILD  nextTrans : CLASS sfc/transition;
  END_ASSOCIATION;

  /* Connections from transitions to next steps. */

  ASSOCIATION previousTransitions : ONE_TO_MANY
    IS_LOCAL;
    PARENT nextStep  : CLASS sfc/step;
    CHILD  prevTrans : CLASS sfc/transition;
  END_ASSOCIATION;

 

END_LIBRARY;
