The ACPLT/KS C++ Communication Library
======================================

This is the Version 1.01 of the C++ Communication Libary. It contains
bug-fixes and some small improvements behind the scenes. For details
about bug-fixes and changes, see part 3 "Changes & Bug-Fixes" below.

But now, compile and enjoy --
  Your ACPLT/KS team <ks@plt.rwth-aachen.de>


1. Introduction
---------------

The "C++ Communication Library" eases the integration of the open
communication system ACPLT/KS into applications, thus enabling them to
operate directly with process data.

For up-to-date information see
    http://www.plt.rwth-aachen.de/ks/english
or
    http://www.plt.rwth-aachen.de/ks (German)

From there, you can also download the "Technology Paper #8" which
describes the "C++ Communication Library" in detail.


2. Compiling the Library
------------------------

2.1 Un*x
--------

Make sure you have the right tools: gcc, gmake, and perl.

Change to the root of the library tree, that is the "acplt" directory,
where this README file is stored too. Choose your weapons -- pardon,
operating system -- and then do:

  $ make linux.all

This will build the library as well as some example applications. If
appropriate, replace "linux" with either "hpux", "irix", or "solaris".


2.2 NT/95
---------

On NT/95, take your chances, and do (Borland C++):

  X:\acplt> make -f makefile.nt nt.all

or (Microshaft Visual C+):

  X:\acplt> nmake -f makefile.nt nt.all

During the compilation of the example applications you'll see some
linker warnings like (Borland C++ only):

  Warning: Extern '_xdr_XXX' was not qualified with __import in module XXX

You can safely ignore these warnings, as there is some compiler/linker
magic necessary to export variables from DLLs unter Windows NT/95, and
this magic gets sometimes dazzled (bad magic, huh?).

When using VC+ 4.2, you'll see warnings about the "use of nonstandard
extensions" -- ignore them. The irony behind this is that the C++
Communication Library emulates such "nonstandard extensions" like the bool
data type because Microsoft does not adhere to the C++ language standard.


3. Changes & Bug-Fixes
----------------------

- SERVERS: The constructor sof the classes KsServer and KsSimpleServer now
  have an optional parameter "port" which can be used to "bind" a ACPLT/KS
  server to a specific port number. This is necessary when ACPLT/KS servers
  should be accessed from outside a firewall. If you do not need to bind to
  a specific port, then use the pre-defined constant KsServerBase::KS_ANYPORT.
  Because this port parameter is optional, existing code will not break but
  simply needs to be re-compiled.

- SERVERS: New classes KsInAddrSet and KsHostInAddrSet for checking IP
  addresses of incomming requests again a lists of allowed or forbidden IP
  addresses.

- SERVERS: ntksmanager.exe and tmanager.exe now deny register requests from
  remote "servers". tmanager.exe now does this also on OpenVMS. (On un*x
  operating systems this was never a problem from the early beginnings of
  the ACPLT/KS C++ Communication Library, so guess which operating systems
  are *true* server operating systems...)

- SERVERS: support for "service processes" under Windooze 95, see the
  documentation for the class KsW95ServiceServer in the Technology Paper #8
  for details.

- CLIENTS: A bug in the KscPackageClass has been corrected which crashed ACPLT/KS
  clients trying to remove a variable or package from a KscPackage object.

- CLIENTS: See TP#8 for how to control the timeout and retry values, which
  control how long an ACPLT/KS client will wait for an answer from a server and
  if a connection breaks down how often the client will try to reconnect
  automatically before the timeout is reported to the calling application.

- ALL: The classes PltPtrHandle and PltArrayHandle now have operators for
  tests on equality or non-equality implemented. The operator==() checks
  whether both handles *point to the same* object or both are unbound.
  In this case the operator returns true. The operator!=() is just the
  opposite.

- ALL: On Windows NT, the file ntksmanager.exe contains version information,
  which indicates the release level, copyright, and more. Please note, that
  due to a bug in Windows NT (*a* bug?!), you can't see this information
  in the Explorer, if the file is located on a network drive. The same applies
  to the w95ksmanager.exe file which is a ACPLT/KS manager service process
  for Windows 95.

- For further information, peek at:
  http://www.plt.rwth-aachen.de/ks/english/firstaid.html


4. Suggested Readings
---------------------

Well -- all "Technology Papers" of course. But for a quick start you
should first make yourself familiar with the object model of ACPLT/KS
(Technology Paper #4). If you plan to write a KS server, then you
should read the "Technology Paper #3" too. In every case, you should
take a look at the "Technology Paper #8", as it is the reference guide
to the C++ communication library.


5. Legal Stuff
--------------

Copyright (c) 1996, 1997
Chair of Process Control Engineering,
Aachen University of Technology.
All rights reserved.

THIS SOFTWARE IS PROVIDED BY THE CHAIR OF PROCESS CONTROL ENGINEERING
``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE CHAIR OF
PROCESS CONTROL ENGINEERING BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must print or display the above
   copyright notice either during startup or must have a means for
   the user to view the copyright notice.
3. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
4. Neither the name of the Chair of Process Control Engineering nor the
   name of the Aachen University of Technology may be used to endorse or
   promote products derived from this software without specific prior
   written permission.


The ACPLT/KS Group
ks@plt.rwth-aachen.de
Chair of Process Control Engineering
Aachen University of Technology
Turmstrasse 46
D-52064 Aachen, Germany
