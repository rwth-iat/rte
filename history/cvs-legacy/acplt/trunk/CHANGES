TODO:
  KssChildrenService::getChildByPath() implementieren
  KsServerXXX::getPP()


plt/config.h:

  PLT_SOURCE_V1_BC
  PLT_SOURCE_V1PLUS_BC


ks/ks.h:
  typedef u_long KS_SEMANTIC_FLAGS
  enum KS_STRUCTURE_FLAGS
  KS_LT_LOCAL_MANY_MANY, KS_LT_GLOBAL_MANY_MANY


ks/props.h:
  class KsProjProps --> class KsEngProps
  class KsVarProjProps --> class KsVarEngProps
  class KsDomainProjProps --> class KsDomainEngProps
  class KsLinkProjProps --> class KsLinkEngProps
  class KsHistoryProjProps --> class KsHistoryEngProps

  class KsEngProps:
    +attribute: KS_SEMANTIC_FLAGS semantic_flags
    +ctor: (,,,,sf)

  class KsDomainEngProps:
    +attribute: KsString class_identifier
    +ctor: (,,,,sf,)

  class KsVarEngProps:
    +ctor: (,,,,sf,)

  (+)class KsLinkEngProps:
    +attribute: KS_LINK_TYPE type
    +attribute: KsString opposite_role_identifier
    +attribute: KsString association_identifier
    +ctor: ...

  (+)class KsHistoryEngProps:
    +attribute: KS_HIST_TYPE type;
    +attribute: KS_INTERPOLATION_MODE default_interpolation;
    +attribute: KS_INTERPOLATION_MODE supported_interpolations;
    +attribute: KsString type_identifier;

  +class KsStructureEngProps:
    +...


ks/propsv1.h:
  Contains old projected properties for backwards compatibility with
  the ACPLT/KS version 1 protocol.
  +class KsEngPropsV1
  +class KsVarEngPropsV1
  +class KsDomainEngPropsV1


ks/serviceparams.h:
  class KsGetPPResult:
    +attribute: KsList<KsEngPropsV1Handle> items
    -attribute: KsList<KsProjPropsHandle> items
  +class KsGetEPParams
  +class KsGetEPResult


ks/objmgrparams.h:
  class KsLinkItem:
    +attribute: KsPlacementHint opposite_place


ks/svrobjects.h:
  (+)class KssCurrPropsService:
    +method: virtual KS_RESULT getCurrProps(KsCurrPropsHandle &hprops) const
    +method: virtual KsCurrPropsHandle getCurrProps() const = 0
    +method: virtual KS_RESULT setCurrProps(const KsCurrPropsHandle &hprops) = 0

  (+)class KssChildrenService:
    +method: virtual KssChildIterator_THISTYPE *
        newMaskedIterator(const KsMask & name_mask,
                          KS_OBJ_TYPE type_mask) const = 0
    +method: KssChildIterator_THISTYPE *newIterator() const = 0
    +method: virtual KssCommObjectHandle getChildById(const KsString & id) const = 0
    +method: virtual KssCommObjectHandle getChildByPath(const KsPath & path) const = 0
      FIXME: implement default

  class KssCommObj:
    +method: virtual KS_SEMANTIC_FLAGS getSemanticFlags() const = 0
    +method: virtual KsEngPropsHandle getEP() const = 0
    -method: virtual KsProjPropsHandle getPP() const = 0

  class KssDomain:
    +method: virtual KS_SEMANTIC_FLAGS getSemanticFlags() const = 0
    +method: virtual KsString getClassIdentifier() const = 0
    +method: virtual KsEngPropsHandle getEP() const
    -method: virtual KsProjPropsHandle getPP() const

  class KssVariable:
    +method: virtual KS_SEMANTIC_FLAGS getSemanticFlags() const = 0
    +method: virtual KsEngPropsHandle getEP() const
    -method: virtual KsProjPropsHandle getPP() const

  class KssLink:
    +method: virtual KS_SEMANTIC_FLAGS getSemanticFlags() const = 0
    +method: virtual KS_LINK_TYPE getType() const = 0
    +method: virtual KsString getOppositeRoleIdentifier() const = 0
    +method: virtual KsEngPropsHandle getEP() const
    -method: virtual KsProjPropsHandle getPP() const

  class KssHistory:
    +method: virtual KS_SEMANTIC_FLAGS getSemanticFlags() const = 0
    +method: virtual KS_HIST_TYPE getType() const = 0
    +method: virtual KS_INTERPOLATION_MODE getDefaultInterpolation() const = 0
    +method: virtual KS_INTERPOLATION_MODE getSupportedInterpolations() const = 0
    +method: virtual KsString getTypeIdentifier() const = 0
    +method: virtual KsEngPropsHandle getEP() const
    -method: virtual KsProjPropsHandle getPP() const


ks/svrsimpleobjects.h:
  class KssSimpleCommObject:
    +method: virtual KS_SEMANTIC_FLAGS getSemanticFlags() const


ks/svrbase.h:
  class KsServerBase:
    method: getProtocolVersion() now returns KS_PROTOCOL_VERSION


ks/histdomain.h:
  class KssHistoryDomain:
    +method: KsEngPropsHandle KssHistoryDomain::getEP() const
    -method: KsProjPropsHandle KssHistoryDomain::getPP() const


ks/commobject.h:
  class KscCommObject:
    +method: virtual const KsEngProps_THISTYPE *getEngProps() const = 0
    +method: virtual bool getEngPropsUpdate() = 0
    -method: virtual const KsProjProps_THISTYPE *getProjProps() const = 0
    -method: virtual bool getProjPropsUpdate() = 0
    +method: KscChildIterator *newChildIterator_(KS_OBJ_TYPE typeMask,
					KS_EP_FLAGS scopeMask,
                                        KsString nameMask = KsString("*"))
    +method: bool getChildEPUpdate(KS_OBJ_TYPE typeMask,
                          KsString nameMask,
			  KS_EP_FLAGS scopeMask,
			  KsGetEPResult *&result)

ks/history.h:
  class KscHistory:
    +method: bool setEngProps(KsEngPropsHandle)
    +method: const KsEngProps_THISTYPE *getEngProps() const
    +method: bool getEngPropsUpdate()
    -method: bool setProjProps(KsProjPropsHandle)
    -method: const KsProjProps_THISTYPE *getProjProps() const
    -method: bool getProjPropsUpdate()


ks/client.h:
  class KscServer:
    +method: getPP(const KscAvModule *avm, const KsGetPPParams &params, KsGetEPResult &result)
