#
# Simple and crazy makefile for OpenVMS (libks)
#
REPOSITORY = dka0:[martin.cxx_repository]

#CXX = gcc/plus
#CXX_FLAGS = /float=ieee/cc1_options="-fno-exceptions -g0 -fno-implicit-templates"
CXX = cxx

CXX_FLAGS = /DEBUG

LD = link

LD_FLAGS = /DEBUG

CXX_EXTRA_FLAGS = \
	/warnings=(disable=(EXTRASEMI,FOUNDCR)) \
	/notemplate_define \
	/repository=($(REPOSITORY))

CXX_DEFINES = PLT_SYSTEM_OPENVMS=1

AR = library

### Filename conventions
O = .obj
A = .olb
EXE = .exe

PLTDIR = [-.-.-.plt]
SRCDIR = [-.-.src]
CXX_INCLUDES = "../openvms","../../include","../../../plt/include"

LIBKS = libks$(A)
LIBKSSVR = libkssvr$(A)
LIBKSCLN = libkscln$(A)

LIBPLT = [-.-.-.plt.build.openvms]libplt$(A)

LIBRPC = dka0:[vms$$common.ucx$$lib.rpc]ucx$$rpcxdr

.SUFFIXES:

.SUFFIXES: .cpp $(O) $(A) $(EXE)

### The VPATH mechanism isn't supported yet...
#VPATH = "../../src"

all: libks$(A) libkssvr$(A) libkscln$(A)

### Include generic part (generic dependencies)
include [-]generic.mk

CXX_COMPILE = $(CXX) \
		$(CXX_EXTRA_FLAGS) \
		/define=($(CXX_DEFINES)) \
		/include=($(CXX_INCLUDES)) \
		$(CXX_FLAGS)

### Include auto dependencies
include [-]depend.vms

$(LIBKS_OBJECTS): %.obj: [-.-.src]%.cpp
	-del $@;*
	$(CXX_COMPILE) $<

$(LIBKSSVR_OBJECTS): %.obj: [-.-.src]%.cpp	
	-del $@;*
	$(CXX_COMPILE) $<

$(LIBKSCLN_OBJECTS): %.obj: [-.-.src]%.cpp	
	-del $@;*
	$(CXX_COMPILE) $<

$(EXAMPLES_OBJECTS): %.obj: [-.-.examples]%.cpp
	-del $@;*
	$(CXX_COMPILE) $<

tmanager.exe: tmanager.obj tmanager1.obj $(LIBKSSVR) $(LIBKS)
	-del $@;*
	$(LD) $(LD_FLAGS) tmanager.obj,tmanager1.obj,$(LIBKSSVR)/lib,$(LIBKS)/lib,$(LIBPLT)/lib,$(LIBRPC)/lib

tserver.exe: tserver.obj tserver1.obj $(LIBKSSVR) $(LIBKS)
	-del $@;*
	$(LD) $(LD_FLAGS) tserver.obj,tserver1.obj,$(LIBKSSVR)/lib,$(LIBKS)/lib,$(LIBPLT)/lib,$(LIBRPC)/lib

tsclient.exe : tsclient.obj tsclient1.obj svrrpcctx$O $(LIBKS)
	-del $@;*
	$(LD) $(LD_FLAGS) tsclient.obj,tsclient1.obj,svrrpcctx.obj,$(LIBKS)/lib,$(LIBPLT)/lib,$(LIBRPC)/lib

ttree.exe : ttree.obj ttree1.obj $(LIBKS) $(LIBKSCLN)
	-del $@;*
	$(LD) $(LD_FLAGS) ttree.obj,ttree1.obj,$(LIBKSCLN)/lib,$(LIBKS)/lib,$(LIBPLT)/lib,$(LIBRPC)/lib

tshell.exe : tshell.obj $(LIBKS) $(LIBKSCLN)
	-del $@;*
	$(LD) $(LD_FLAGS) tshell.obj,$(LIBKSCLN)/lib,$(LIBKS)/lib,$(LIBPLT)/lib,$(LIBRPC)/lib

libks$(A): $(LIBKS_OBJECTS)
	-del $@;*
	$(AR) /create libks$(A) $^

libkssvr$(A): $(LIBKSSVR_OBJECTS)
	-del $@;*
	$(AR) /create libkssvr$(A) $^

libkscln$(A): $(LIBKSCLN_OBJECTS)
	-del $@;*
	$(AR) /create libkscln$(A) $^

clean:
	-del *$(O);*
	-del libks$(A);*
	-del libkssrv$(A);*
	-del libkscln$(A);*
	-del t*$(EXE);*

# EOF makefile.vms




