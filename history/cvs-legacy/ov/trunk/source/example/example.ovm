/*
*   $Id: example.ovm,v 1.6 1999-08-29 16:28:17 dirk Exp $
*
*   Copyright (C) 1998-1999
*   Lehrstuhl fuer Prozessleittechnik,
*   RWTH Aachen, D-52056 Aachen, Germany.
*   All rights reserved.
*
*   Author: Dirk Meyer <dirk@plt.rwth-aachen.de>
*
*   This file is part of the ACPLT/OV Package which is licensed as open
*   source under the Artistic License; you can use, redistribute and/or
*   modify it under the terms of that license.
*
*   You should have received a copy of the Artistic License along with
*   this Package; see the file ARTISTIC-LICENSE. If not, write to the
*   Copyright Holder.
*
*   THIS PACKAGE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
*   WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES
*   OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
*/
/*
*	History:
*	--------
*	04-May-1999 Dirk Meyer <dirk@plt.rwth-aachen.de>: File created.
*/

#include "ov.ovm"

LIBRARY example
	VERSION = "1.0";
	AUTHOR = "Dirk Meyer";
	COPYRIGHT = "Copyright (C) 1998, 1999 PLT, RWTH Aachen";
	COMMENT = "ACPLT/OV Example Library";

	CLASS getvarclient : CLASS ov/object
		IS_INSTANTIABLE;
		IS_FINAL;
		COMMENT = "ACPLT/KS client sending GetVar requests";
		VARIABLES
			host   : STRING HAS_ACCESSORS
				COMMENT = "name of the host where the ACPLT/KS server lives";
			server : STRING HAS_ACCESSORS
				COMMENT = "name of the ACPLT/KS server";
			path   : STRING HAS_ACCESSORS
				COMMENT = "variable path";
			pconn  : C_TYPE <OV_KSCLIENT_CONNECTION_PTR>;
			psvc   : C_TYPE <OV_KSCLIENT_SERVICE_PTR>;
		END_VARIABLES;
		OPERATIONS
			startup : C_FUNCTION <OV_FNC_STARTUP>;
			shutdown : C_FUNCTION <OV_FNC_SHUTDOWN>;
		END_OPERATIONS;
	END_CLASS;

	CLASS testclass : CLASS ov/domain
		IS_INSTANTIABLE;
		COMMENT = "test class";
		VARIABLES
			Single : SINGLE HAS_ACCESSORS
				UNIT = "m/s" COMMENT = "single precision floating point value";
			String : STRING HAS_ACCESSORS
				COMMENT = "string value";
			Time : TIME HAS_ACCESSORS IS_STATIC
				UNIT = "UTC" COMMENT="static time variable";
			IntPV : INT_PV HAS_ACCESSORS
				UNIT = "ticks" COMMENT = "integer process value";
			UIntVec[] : UINT HAS_ACCESSORS
				COMMENT = "dynamic unsigned integer vector value";
			StringVec[] : STRING IS_DERIVED HAS_ACCESSORS
				COMMENT = "string vector value";
		END_VARIABLES;
	END_CLASS;

	ASSOCIATION testassoc : ONE_TO_MANY
		PARENT MyParent : CLASS example/testclass
			COMMENT = "link to my parent";
		CHILD  MyChildren : CLASS example/testclass
			COMMENT = "link to my children";
	END_ASSOCIATION;
END_LIBRARY;

