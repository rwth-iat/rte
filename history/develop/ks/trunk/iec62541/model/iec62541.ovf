#ifndef iec62541_OVF_INCLUDED
#define iec62541_OVF_INCLUDED

#include "iec62541.ovt"

typedef OV_DLLFNCEXPORT UA_Int32 UA_FNC_ADDNODES(
	UA_AddNodesItem *nodesToAdd,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_AddNodesResult* addNodesResults,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef OV_DLLFNCEXPORT UA_Int32 UA_FNC_ADDREFERENCES(
	UA_AddReferencesItem* referencesToAdd,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_StatusCode *addReferencesResults,
	UA_DiagnosticInfo diagnosticInfos
);

typedef OV_DLLFNCEXPORT UA_Int32 UA_FNC_DELETENODES(
	UA_DeleteNodesItem *nodesToDelete,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_StatusCode *deleteNodesResults,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef OV_DLLFNCEXPORT UA_Int32 UA_FNC_DELETEREFERENCES(
	UA_DeleteReferencesItem *referenceToDelete,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_StatusCode deleteReferencesresults,
	UA_DiagnosticInfo diagnosticInfos
);

typedef OV_DLLFNCEXPORT UA_Int32 UA_FNC_READNODES(
	UA_ReadValueId *readValueIds,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_DataValue *readNodesResults,
	UA_Boolean timeStampToReturn,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef OV_DLLFNCEXPORT UA_Int32 UA_FNC_WRITENODES(
	UA_WriteValue *writeValues,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_StatusCode *writeNodesResults,
	UA_DiagnosticInfo *diagnosticInfo
);

typedef OV_DLLFNCEXPORT UA_Int32 UA_FNC_BROWSENODES(
	UA_BrowseDescription *browseDescriptions,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_UInt32 requestedMaxReferencesPerNode,
	UA_BrowseResult *browseResults,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef OV_DLLFNCEXPORT	OV_INSTPTR_iec62541_uaBaseNodeType UA_FNC_GETNODEPTR(
	OV_UINT nodeId
);
	
	
#endif

