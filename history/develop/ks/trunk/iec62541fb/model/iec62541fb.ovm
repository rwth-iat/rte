#include "ov.ovm"
#include "fb.ovm"
#include "iec62541.ovm"

/**
This Library implements the OPC-UA Client FUNCTION BLOCKS for IEC61131-3 Release 1.0 published by PLCopen and OPC Foundation

- DWORD is mapped to UINT in the OV world
- 

*/

LIBRARY iec62541fb
	VERSION   = "V0.1 (27-Aug-2015)";
	AUTHOR    = "Holger Jeromin";
	COPYRIGHT = "";
	COMMENT   = "OPC-UA Client FUNCTION BLOCKS for IEC61131-3";
	
	/**
		Documentation of UA_Connect.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/

	CLASS Communication : CLASS fb/functionblock
		COMMENT = "baseclass for communication";
		VARIABLES
			Done				: 	BOOL	FLAGS = "o" COMMENT="Signals a connection has been initially established.";
			Busy				: 	BOOL	FLAGS = "o" COMMENT="The FB is not finished and new output values are to be expected.";
			Error				: 	BOOL	FLAGS = "o" COMMENT="Signals that an error has occurred within the FB.";
			ErrorID				: 	UINT	FLAGS = "o" COMMENT="Error code.";
		END_VARIABLES;
	END_CLASS;

	CLASS Connect : CLASS iec62541fb/Communication
		IS_INSTANTIABLE;
		COMMENT = "This Function Block is used to create a (optional secure) transport connection and an OPC-UA session. The connection shall be terminated by calling the UA_Disconnect after establishing the connection.";
		VARIABLES
			Execute				:	BOOL	HAS_SET_ACCESSOR FLAGS = "i" COMMENT="On rising edge connection is started.";
			ServerEndpointUrl	:	STRING	FLAGS = "i" COMMENT="URL";
/* NOT IMPLEMENTED			SessionConnectInfo :	STRING	FLAGS = "i" COMMENT="URL"; 	*/
			Timeout				: 	TIME_SPAN	FLAGS = "i" COMMENT="Maximum time to establish the connection.";

			ConnectionHdl		: 	UINT	FLAGS = "o" COMMENT="Connection handle – is valid until UA_Disconnect is called.";
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;

	CLASS Disconnect : CLASS iec62541fb/Communication
		IS_INSTANTIABLE;
		COMMENT = "This Function Block is used to close a transport connection and an OPC-UA session.";
		VARIABLES
			Execute				:	BOOL	HAS_SET_ACCESSOR FLAGS = "i" COMMENT="On rising edge connection is terminated.";
			ConnectionHdl		: 	UINT	FLAGS = "i" COMMENT="Connection handle of connection to be closed.";
			Timeout				: 	TIME_SPAN	FLAGS = "i" COMMENT="Maximum time to close the connection.";
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
 
	/*	NamespaceGetIndex	*/
	/*	TranslatePath	*/
	
	CLASS NodeGetHandle : CLASS iec62541fb/Communication
		IS_INSTANTIABLE;
		COMMENT = "This Function Block is used to get the node handle.";
		VARIABLES
			Execute				:	BOOL	HAS_SET_ACCESSOR FLAGS = "i" COMMENT="FB performs its task on rising edge on this input.";
			ConnectionHdl		: 	UINT	FLAGS = "i" COMMENT="Connection handle.";
			NodeID				: 	C_TYPE <NodeID>	FLAGS = "i" COMMENT="Connection handle.";
			Timeout				: 	TIME_SPAN	FLAGS = "i" COMMENT="Time to response.";
			
			NodeHdl		: 	UINT	FLAGS = "o" COMMENT="Node handle.";
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	/*TODO add a NodeGetHandleSimple with KS available inputs? */
	
	/*	NodeGetHandleList	*/
	
	CLASS NodeReleaseHandle : CLASS iec62541fb/Communication
		IS_INSTANTIABLE;
		COMMENT = "This Function Block is used to release the node handle.";
		VARIABLES
			Execute				:	BOOL	HAS_SET_ACCESSOR FLAGS = "i" COMMENT="FB performs its task on rising edge on this input.";
			ConnectionHdl		: 	UINT	FLAGS = "i" COMMENT="Connection handle.";
			NodeHdl				: 	UINT	FLAGS = "i" COMMENT="Node handle to be released.";
			Timeout				: 	TIME_SPAN	FLAGS = "i" COMMENT="Time to response.";
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	/*	NodeReleaseHandleList	*/
	
	/*
	CLASS NodeGetInfo : CLASS iec62541fb/Communication
		IS_INSTANTIABLE;
		COMMENT = "This Function Block is used to get the node information.";
		VARIABLES
			Execute				:	BOOL	HAS_SET_ACCESSOR FLAGS = "i" COMMENT="FB performs its task on rising edge on this input.";
			ConnectionHdl		: 	UINT	FLAGS = "i" COMMENT="Connection handle.";
			NodeID				: 	C_TYPE <NodeID>	FLAGS = "i" COMMENT="Connection handle.";
			Timeout				: 	TIME_SPAN	FLAGS = "i" COMMENT="Time to response.";
			
			todo
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	*/
	
	/*	SubscriptionCreate	*/
	/*	SubscriptionDelete	*/
	/*	SubscriptionOperate	*/
	/*	MonitoredItemAdd	*/
	/*	MonitoredItemRemove	*/
	/*	MonitoredItemOperate	*/

	CLASS Read : CLASS iec62541fb/Communication
		IS_INSTANTIABLE;
		COMMENT = "This Function Block is used to get the node information.";
		VARIABLES
			Execute				:	BOOL	HAS_SET_ACCESSOR FLAGS = "i" COMMENT="On rising edge node information will be read.";
			ConnectionHdl		: 	UINT	FLAGS = "i" COMMENT="Connection handle.";
			NodeHdl				: 	UINT	FLAGS = "i" COMMENT="Node handle.";
			NodeAddInfo			: 	C_TYPE <UANodeAdditionalInfo>	FLAGS = "i" COMMENT="Specifies the attribute and IndexRange.";
			Timeout				: 	TIME_SPAN	FLAGS = "i" COMMENT="Time to response.";
			
			Done				:	BOOL	FLAGS = "i" COMMENT="FB has completed its task.";
			TimeStamp			:	TIME	FLAGS = "o"	COMMENT="Timestamp";
			
			Variable			:	ANY		FLAGS = "o" COMMENT="read value";
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	/*	ReadList	*/

	CLASS Write : CLASS iec62541fb/Communication
		IS_INSTANTIABLE;
		COMMENT = "This Function Block is used to get the node information.";
		VARIABLES
			Execute				:	BOOL	HAS_SET_ACCESSOR FLAGS = "i" COMMENT="On rising edge node information will be written.";
			ConnectionHdl		: 	UINT	FLAGS = "i" COMMENT="Connection handle.";
			NodeHdl				: 	UINT	FLAGS = "i" COMMENT="Node handle.";
			NodeAddInfo			: 	C_TYPE <UANodeAdditionalInfo>	FLAGS = "i" COMMENT="Specifies the attribute and IndexRange.";
			Timeout				: 	TIME_SPAN	FLAGS = "i" COMMENT="Time to response.";
			
			Done				:	BOOL	FLAGS = "i" COMMENT="FB has completed its task.";
			
			Variable			:	ANY		FLAGS = "i" COMMENT="write value";
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	/*	WriteList	*/
	/*	MethodGetHandle	*/
	/*	MethodReleaseHandle	*/
	/*	MethodCall	*/
	
	/*	ConnectionGetStatus	*/
	
END_LIBRARY;
