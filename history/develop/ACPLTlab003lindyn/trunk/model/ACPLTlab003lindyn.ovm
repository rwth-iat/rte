/*
*	Copyright (C) 2013
*	Chair of Process Control Engineering,
*	Aachen University of Technology.
*	All rights reserved.
*
*	Redistribution and use in source and binary forms, with or without
*	modification, are permitted provided that the following conditions
*	are met:
*	1. Redistributions of source code must retain the above copyright
*	   notice, this list of conditions and the following disclaimer.
*	2. Redistributions in binary form must print or display the above
*	   copyright notice either during startup or must have a means for
*	   the user to view the copyright notice.
*	3. Redistributions in binary form must reproduce the above copyright
*	   notice, this list of conditions and the following disclaimer in
*		the documentation and/or other materials provided with the
*		distribution.
*	4. Neither the name of the Chair of Process Control Engineering nor
*		the name of the Aachen University of Technology may be used to
*		endorse or promote products derived from this software without
*		specific prior written permission.
*
*	THIS SOFTWARE IS PROVIDED BY THE CHAIR OF PROCESS CONTROL ENGINEERING
*	``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
*	LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
*	A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE CHAIR OF
*	PROCESS CONTROL ENGINEERING BE LIABLE FOR ANY DIRECT, INDIRECT,
*	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
*	BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
*	OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
*	AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
*	LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
*	WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*	POSSIBILITY OF SUCH DAMAGE.
*/
/***********************************************************************
*
*	File
*	-----
*	ACPLTlab003lindyn.ovm	Funktionsbaustein-Bibliothek 
*							einfache lineare Dynamik
*
*	Autoren:
*	--------
*	EP						Epple <Epple@plt.rwth-aachen.de>
*	
*
*	Historie:
*	--------
*	24-April-2013		EP
*		-	Erstellung
*
************************************************************************/

#include "fb.ovm"

LIBRARY ACPLTlab003lindyn

	VERSION   = "V0.0.1 (24-Apr-2013)";
	AUTHOR    = "U.Epple";
	COPYRIGHT = "Copyright (C) 2005 Lehrstuhl fuer Prozessleittechnik, RWTH Aachen";
	COMMENT   = "Funktionsbausteine für einfache lineare Dynamik";
	
/***********************************************************************
	int - einfacher Integrator	
***********************************************************************/

CLASS int : CLASS fb/functionblock
	IS_INSTANTIABLE;
	VARIABLES
		EN : INT FLAGS = "i" COMMENT = "enables Run-Modus";
		ENO : INT FLAGS = "o" COMMENT = "shows run-modus";
		DX : SINGLE FLAGS = "i" COMMENT = "dx/dt";
		X : SINGLE FLAGS = "o" COMMENT = "x";
		T : DOUBLE FLAGS = "o" COMMENT = "last time step";
		DT : SINGLE FLAGS = "o" COMMENT = "last time span";
		XTR : SINGLE FLAGS = "i" COMMENT = "tracking value";
		KI : SINGLE FLAGS = "i" COMMENT = "integration coefficient";
		DTM : SINGLE FLAGS = "i" COMMENT = "max dt allowed";
		XM : SINGLE FLAGS = "i" COMMENT = "max x allowed";
		XL : SINGLE FLAGS = "i" COMMENT = "min x allowed";
		ERROR : INT FLAGS = "o" COMMENT = "error code";
	END_VARIABLES;
	OPERATIONS
		constructor: C_FUNCTION <OV_FNC_CONSTRUCTOR>;
		typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
	END_OPERATIONS;
END_CLASS;

/***********************************************************************
	pi - einfacher PID-Regler (nur Algorithmus)	
***********************************************************************/

CLASS pi : CLASS fb/functionblock
	IS_INSTANTIABLE;
	VARIABLES
		EN : INT FLAGS = "i" COMMENT = "enables Run-Modus";
		ENO : INT FLAGS = "o" COMMENT = "shows run-modus";
		W : SINGLE FLAGS = "i" COMMENT = "w";
		X : SINGLE FLAGS = "i" COMMENT = "x";
		Y : SINGLE FLAGS = "o" COMMENT = "y";
		YI : SINGLE FLAGS = "o" COMMENT = "yi";
		YP : SINGLE FLAGS = "o" COMMENT = "yp";
		T : DOUBLE FLAGS = "o" COMMENT = "last time step";
		DT : SINGLE FLAGS = "o" COMMENT = "last time span";
		YTR : SINGLE FLAGS = "i" COMMENT = "tracking value";
		KP : SINGLE FLAGS = "i" COMMENT = "kp value input";
		KI : SINGLE FLAGS = "i" COMMENT = "integration coefficient";
		DTM : SINGLE FLAGS = "i" COMMENT = "max dt allowed";
		YMAX : SINGLE FLAGS = "i" COMMENT = "max y allowed";
		YMIN : SINGLE FLAGS = "i" COMMENT = "min y allowed";
		LIMV : INT FLAGS = "o" COMMENT = "limitation violation code";
		TIMV : INT FLAGS = "o" COMMENT = "timing violation code";
	END_VARIABLES;
	OPERATIONS
		constructor: C_FUNCTION <OV_FNC_CONSTRUCTOR>;
		typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
	END_OPERATIONS;
END_CLASS;
/***********************************************************************
	pt1 - einfaches PT1-Glied (nur Algorithmus)	
***********************************************************************/

CLASS pt1 : CLASS fb/functionblock
	IS_INSTANTIABLE;
	VARIABLES
		EN : INT FLAGS = "i" COMMENT = "enables Run-Modus";
		ENO : INT FLAGS = "o" COMMENT = "shows run-modus";
		XIN : SINGLE FLAGS = "i" COMMENT = "input value";
		XOUT : SINGLE FLAGS = "o" COMMENT = "output value";
		T : DOUBLE FLAGS = "o" COMMENT = "last time step";
		DT : SINGLE FLAGS = "o" COMMENT = "last time span";
		X0 : SINGLE FLAGS = "i" COMMENT = "start value";
		KP : SINGLE FLAGS = "i" COMMENT = "K parameter";
		T1 : SINGLE FLAGS = "i" COMMENT = "T1 parameter";
		DTM : SINGLE FLAGS = "i" COMMENT = "max dt allowed";
		TIMV : INT FLAGS = "o" COMMENT = "timing violation code";
	END_VARIABLES;
	OPERATIONS
		constructor: C_FUNCTION <OV_FNC_CONSTRUCTOR>;
		typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
	END_OPERATIONS;
END_CLASS;




END_LIBRARY;
