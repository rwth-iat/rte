#include "fb.ovm"

/**
	IOdriverlib
	This library serves as a generic layer for I/O-Connections.
	It is intended to connect function-charts to hardware-specific I/O-Blocks in a standardized manner.
*/
LIBRARY IOdriverlib
	VERSION   = "V0.1 (02-10-2012)";
	AUTHOR    = "Lars Evertz";
	COPYRIGHT = "2012";
	COMMENT   = "Generic driver blocks for I/O-handling";
	
	/**
		driver
		This is the baseclass.
		@param SimOn: this input is used to switch simulation-mode on (1/TRUE) or off (0/FALSE). In simulation-mode input-blocks use the SimIn(_PV)-Inputs instead of the
		In(Pv) input for calculations. Output-blocks in simulation-mode write to the SimOut output instead of OUT  
	*/
	CLASS driver : CLASS fb/functionblock
		COMMENT="Baseclass for Driver-Blocks. Contains Input to switch between simulation- and normal mode.";
		VARIABLES
			SimOn	:	BOOL	
				FLAGS = "i"
				COMMENT = "Activates simulation-mode: 1=on, 0=off; Inputs in simulation mode use SimIn for calculation instead of IN; Outputs in simulation-mode write to SimOut instead of OUT"
				INITIALVALUE = FALSE;
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	/**
		input
		Baseclass for inputs.
		@param PvSwitch: this input is used to choose the generation of TimeStamp. If PvSwitch==1(TRUE) the input (SIM_)IN_PV is used. The TimeStamp is read from the PV. If
		PvSwitch==0(FALSE) TimeStamp is set to the typemethods execution-time 
		@param TimeStamp: This Output holds the Process-Value's TimeStamp. For generation options see PvSwitch.  
	*/
	CLASS input	:	CLASS IOdriverlib/driver
		COMMENT="Baseclass for inputs. PvSwitch switches between IN and IN_PV; Time Stamp contains either TimeStamp of IN_PV (if PvSwitch=1) or Time of block's execution";
		VARIABLES
			PvSwitch	:	BOOL	
				FLAGS = "i"
				COMMENT = "Activate Pv-input. PvSwitch=1: (Sim)InPv is used to calculate Output (and TimeStamp); PvSwitch=0: TimeStamp is equals execution Time of typemethod"
				INITIALVALUE = TRUE;
			TimeStamp	:	TIME	
				FLAGS = "o"
				COMMENT = "TimeStamp of Out-Value";
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
			constructor	: C_FUNCTION <OV_FNC_CONSTRUCTOR>;
		END_OPERATIONS;
	END_CLASS;
	
	
	/**
		output
		Baseclass for outputs.
		No functionality implemented in here.
	*/
	CLASS output	:	CLASS IOdriverlib/driver
	COMMENT="Baseclass for outputs. Contains no functionality";
		VARIABLES
		/*none*/	
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;	
		END_OPERATIONS;
	END_CLASS;
	
	/**
		DI
		Digital input.
		Reads value from field or simulation and transfers it to outputs. If input-value has no TimeStamps a TimeStamp is generated from the typemethod's executon time
		@param In:	Boolean value from field. Used if SimOn==0 and PvSwitch==0.
		@param InPv:	Boolean ProcessValue (with state and timestamp) from field. Used if SimOn==0 and PvSwitch==1.
		@param SimIn:	Boolean Value from simulation. Used if SimOn==1 and PvSwitch==0.
		@param SimInPv:	Boolean ProcessValue (with state and timestamp) from simulation. Used if SimOn==1 and PvSwitch==1.
		@param Pv:	Boolean output to be connected to a function chart.
		@param PvPv:	Boolean ProcessValue output to be connected to a function chart.
	*/
	CLASS DI	:	CLASS IOdriverlib/input
	IS_INSTANTIABLE;
	COMMENT="Digital Input. Data is transported from In to Pv according to SimOn and PvSwitch options. The Value is not processed / altered in any way";
	VARIABLES
		In	:	BOOL
			FLAGS = "i"
			COMMENT = "Input from field. This one is use if SimOn==0 and PvSwitch==0"
			INITIALVALUE = FALSE;
		InPv	:	BOOL_PV	
			FLAGS = "i"
			COMMENT = "Input from field as ProcessValue (with state and timestamp). Used if SimOn==0 and PvSwitch==1";
		SimIn	:	BOOL	
			FLAGS = "i"
			COMMENT = "Input from simulation. Used if SimOn==1 and PvSwitch==0"
			INITIALVALUE = FALSE;
		SimInPv	:	BOOL_PV	
			FLAGS = "i"
			COMMENT = "Input from simulation as ProcessValue (with state and timestamp). Used if SimOn==1 and PvSwitch==1";
		Pv	:	BOOL	
			FLAGS = "o"
			COMMENT = "Boolean output. Represents input-value."
			INITIALVALUE = FALSE;
		PvPv	:	BOOL_PV	
			FLAGS = "o"
			COMMENT = "Output as boolean ProcessValue. Represents input-value";		
	END_VARIABLES;
	OPERATIONS
		typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		constructor	: C_FUNCTION <OV_FNC_CONSTRUCTOR>;
	END_OPERATIONS;	
	END_CLASS;
	
	/**
		AI
		Analog input.
		Reads value from field or simulation and transfers it to outputs. If input-value has no TimeStamps a TimeStamp is generated from the typemethod's executon time
		Input range is between 0.0 and 1.0. This is transformed linearly to output range specified by Min and Max
		@param In:	Single precision Floating point value from field. Used if SimOn==0 and PvSwitch==0.
		@param InPv:	Single precision Floating point ProcessValue (with state and timestamp) from field. Used if SimOn==0 and PvSwitch==1.
		@param SimIn:	Single precision Floating point Value from simulation. Used if SimOn==1 and PvSwitch==0.
		@param SimInPv:	Single precision Floating point ProcessValue (with state and timestamp) from simulation. Used if SimOn==1 and PvSwitch==1.
		@param Pv:	Single precision Floating point output to be connected to a function chart.
		@param PvPv:	Single precision Floating point ProcessValue output to be connected to a function chart.
		@param Min:	Lower limit of output range.
		@param Max:	Upper limit of output range.
	*/
	CLASS AI	:	CLASS IOdriverlib/input
	IS_INSTANTIABLE;
	COMMENT="Analog Input. Data is processed from IN to OUT according to SimOn and PvSwitch options. Input range is between 0.0 and 1.0. This is transformed linearly to output range specified by Min and Max";
	VARIABLES
		In	:	SINGLE
			FLAGS = "i"
			COMMENT = "Input from field. This one is use if SimOn==0 and PvSwitch==0. Range 0.0...1.0"
			INITIALVALUE = 0.0;
		InPv	:	SINGLE_PV	
			FLAGS = "i"
			COMMENT = "Input from field as ProcessValue (with state and timestamp). Used if SimOn==0 and PvSwitch==1. Range 0.0...1.0";
		SimIn	:	SINGLE	
			FLAGS = "i"
			COMMENT = "Input from simulation. Used if SimOn==1 and PvSwitch==0. Range 0.0...1.0"
			INITIALVALUE = 0.0;
		SimInPv	:	SINGLE_PV	
			FLAGS = "i"
			COMMENT = "Input from simulation as ProcessValue (with state and timestamp). Used if SimOn==1 and PvSwitch==1. Range 0.0...1.0";
		Pv	:	SINGLE	
			FLAGS = "o"
			COMMENT = "Processed Value as single precision floating point value."
			INITIALVALUE = 0.0;
		PvPv	:	SINGLE_PV	
			FLAGS = "o"
			COMMENT = "Single precision floating point output with TimeStamp.";
		Min	:	SINGLE	
			FLAGS = "i"
			COMMENT = "Lower limit of output range."
			INITIALVALUE = 0.0;
		Max	:	SINGLE	
			FLAGS = "i"
			COMMENT = "Upper limit of output range."
			INITIALVALUE = 100.0;	
	END_VARIABLES;
	OPERATIONS
		typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		constructor	: C_FUNCTION <OV_FNC_CONSTRUCTOR>;
	END_OPERATIONS;	
	END_CLASS;
	
	/**
		DO
		Digital output.
		Reads value from inputs and transfers it to outputs (field or simulation).
		@param Sp:	Boolean value from field. Used if SimOn==0 and PvSwitch==0.
		@param Out:	Boolean ProcessValue (with state and timestamp) from field. Used if SimOn==0 and PvSwitch==1.
		@param SimOut:	Boolean Value from simulation. Used if SimOn==1 and PvSwitch==0.
	*/
	CLASS DO	:	CLASS IOdriverlib/input
	IS_INSTANTIABLE;
	COMMENT="Digital Output. Data is transported from Sp to Out or SimOut according to SimOn option. The Value is not processed / altered in any way";
	VARIABLES
		Sp	:	BOOL
			FLAGS = "i"
			COMMENT = "Input from function chart."
			INITIALVALUE = FALSE;
		Out	:	BOOL	
			FLAGS = "o"
			COMMENT = "Boolean output. Represents input-value. This one is used if SimOn==0."
			INITIALVALUE = FALSE;
		SimOut	:	BOOL	
			FLAGS = "o"
			COMMENT = "Boolean output for simulation. Represents input-value. This one is used if SimOn==1."
			INITIALVALUE = FALSE;		
	END_VARIABLES;
	OPERATIONS
		typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
	END_OPERATIONS;	
	END_CLASS;
	
	/**
		AO
		Analog Output.
		Reads value from function chart and transfers it to outputs (field or simulation).
		Input range is between min and Max. This is transformed linearly to output range (0.0 ... 1.0).
		@param Sp:	Single precision Floating point value from function chart.
		@param Out:	Single precision Floating point value to field. Used if SimOn==0.
		@param SimOut:	Single precision Floating point Value to simulation. Used if SimOn==1.
		@param Min:	Lower limit of input range.
		@param Max:	Upper limit of input range.
	*/
	CLASS AO	:	CLASS IOdriverlib/input
	IS_INSTANTIABLE;
	COMMENT="Analog Output. Input range is between Min and Max. This is transformed linearly to output range (0.0...1.0)";
	VARIABLES
		Sp	:	SINGLE
			FLAGS = "i"
			COMMENT = "Input from function chart. Range Min...Max"
			INITIALVALUE = 0.0;
		Out	:	SINGLE	
			FLAGS = "o"
			COMMENT = "Output to field. Used if SimOn==0. Range 0.0...1.0";
		SimOut	:	SINGLE	
			FLAGS = "o"
			COMMENT = "Output to simulation. Used if SimOn==1. Range 0.0...1.0"
			INITIALVALUE = 0.0;
		Min	:	SINGLE	
			FLAGS = "i"
			COMMENT = "Lower limit of input range."
			INITIALVALUE = 0.0;
		Max	:	SINGLE	
			FLAGS = "i"
			COMMENT = "Upper limit of input range."
			INITIALVALUE = 100.0;	
	END_VARIABLES;
	OPERATIONS
		typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
	END_OPERATIONS;	
	END_CLASS;
	
END_LIBRARY;
