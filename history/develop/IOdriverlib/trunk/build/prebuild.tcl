# ================ Prebuild script for user libraries ==================
#  Generated by acplt_makmak
#
#  You are free to edit this file, since acplt_makmak will never
#  overwrite it
# ======================================================================

# ----------------------- CONFIGURATION START --------------------------
#set to 1 if you want the sourcetemplate dir to be merged into the source dir
set merge 0 	
# ----------------------- CONFIGURATION END ----------------------------
#error flag
set error 0
#new file flag
set newfiles 0

cd ..
if { $argc == 1 } {
	set libname "$argv"
	set makmak ""
    } elseif {$argc == 2} {
       set libname [lindex $argv 0]
       set makmak [lindex $argv 1]
    } else {
   	puts "Usage: prebuild library_name or prebuild library_name makmak_option"
   	exit   
   }

while {$libname eq ""} {
	puts "Libname is empty"
	exit
}

#check windows platform
if {[lsearch $tcl_platform(os) "Windows"] >= 0} {
	set platform "nt"
	set ext ".dll"
} else {
	set platform "linux"
	set ext ".so"
}

#get time of library build
set libpath "./$platform/$libname$ext"
if {[file exists $libpath]} {
	set buildtime [file mtime $libpath]
} else {
	set buildtime 0
}

#check time of model editing
if {[file exists "../model/$libname.ovm"]} {
	set ovmtime [file mtime "../model/$libname.ovm"]
} else {
	set ovmtime 0
}
if {[file exists "../model/$libname.ovf"]} {
	set ovftime [file mtime "../model/$libname.ovf"]
} else {
	set ovftime 0
}
if {[file exists "../model/$libname.ovt"]} {
	set ovttime [file mtime "../model/$libname.ovt"]
} else {
	set ovttime 0
}
#does not work in windows
#set modeltime [expr {max($ovmtime,$ovftime,$ovttime)}]
set modeltime 0
if {$ovmtime > $modeltime} {
	set modeltime $ovmtime
}
if {$ovftime > $modeltime} {
	set modeltime $ovftime
}
if {$ovttime > $modeltime} {
	set modeltime $ovttime
}

if {$modeltime >= $buildtime} {
	set newfiles 1
	if {[file exists "../sourcetemplates"]} {
		file delete -force "../sourcetemplates"
	}
	if {[file exists "../source/sourcetemplates"]} {
		file delete -force "../source/sourcetemplates"
	}
	if {[file exists "../temp"]} {
		file delete -force "../temp"
	}
	#backup source
	file rename "../source" "../temp"
	file mkdir "../source"

	puts "Running acplt_builder with option \"$makmak\":"
	#run acplt_builder
	if {$makmak == ""} {
		set command "acplt_builder -l $libname"
	} else {
		set command "acplt_builder -l $libname $makmak"
	}

	set pipe [open "| $command" w+]
	flush $pipe
	set standard_output [read -nonewline $pipe]
	set exit_status 0
	if {[catch {close $pipe} standard_error] != 0} {
	    global errorCode
	    if {"CHILDSTATUS" == [lindex $errorCode 0]} {
	        set exit_status [lindex $errorCode 2]
	    }
	    if {"CHILDKILLED" == [lindex $errorCode 0]} {
	    	set exit_status 1
	    }
	}
	puts "$standard_output"
	if {$standard_error != ""} {
		puts "ERROR: "
		#hack to replace (null) in the error output
		puts [string map "(null) $libname.ovm" $standard_error]
	}
	if {$exit_status != 0} {
		set error 1
	}

	#restore source
	file rename "../source" "../sourcetemplates"
	file rename "../temp" "../source"
	file rename "../sourcetemplates" "../source/sourcetemplates"

	if {$error != 0} {
		exit 1
	}

	if {$merge == 1} {
		set dir "../sourcetemplates"
		set files [glob -directory $dir *]
		#careful merging
		foreach f $files {
			set filename [file tail "$f"]
			if {![file exists "../source/$filename"]} {
				file copy $f "../source/$filename"
				puts "$filename copied to the source directory"
			}
		}
	}

   puts "Starting a second makmak pass. Running acplt_makmak with option \"$makmak\":"
   #run acplt_makmak
   if {$makmak == ""} {
           if { [catch { exec acplt_makmak -l $libname} msg] } {
              puts "ERROR: $msg"
           }
   } else {
           if { [catch { exec acplt_makmak -l $libname $makmak} msg] } {
              puts "ERROR: $msg"
           }
   }
}

puts "Prebuild script finished."
if {$newfiles == 1} {
	puts "New files have been created in source/sourcetemplates directory."
}
exit
