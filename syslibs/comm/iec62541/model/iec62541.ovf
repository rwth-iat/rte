#ifndef iec62541_OVF_INCLUDED
#define iec62541_OVF_INCLUDED

#include "iec62541.ovt"

typedef UA_Int32 UA_FNC_ADDNODES(
	void *ensHandle,
	const UA_RequestHeader *requestHeader,
	UA_AddNodesItem *nodesToAdd,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_AddNodesResult* addNodesResults,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef UA_Int32 UA_FNC_ADDREFERENCES(
	void *ensHandle,
	const UA_RequestHeader *requestHeader,
	UA_AddReferencesItem* referencesToAdd,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_StatusCode *addReferencesResults,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef UA_Int32 UA_FNC_DELETENODES(
	void *ensHandle,
	const UA_RequestHeader *requestHeader,
	UA_DeleteNodesItem *nodesToDelete,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_StatusCode *deleteNodesResults,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef UA_Int32 UA_FNC_DELETEREFERENCES(
	void *ensHandle,
	const UA_RequestHeader *requestHeader,
	UA_DeleteReferencesItem *referenceToDelete,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_StatusCode deleteReferencesresults,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef UA_Int32 UA_FNC_READNODES(
	void *ensHandle,
	const UA_RequestHeader *requestHeader,
	UA_ReadValueId *readValueIds,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_DataValue *readNodesResults,
	UA_Boolean timeStampToReturn,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef UA_Int32 UA_FNC_WRITENODES(
	void *ensHandle,
	const UA_RequestHeader *requestHeader,
	UA_WriteValue *writeValues,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_StatusCode *writeNodesResults,
	UA_DiagnosticInfo *diagnosticInfo
);

typedef UA_Int32 UA_FNC_BROWSENODES(
	void *ensHandle,
	const UA_RequestHeader *requestHeader,
	UA_BrowseDescription *browseDescriptions,
	UA_UInt32 *indices,
	UA_UInt32 indicesSize,
	UA_UInt32 requestedMaxReferencesPerNode,
	UA_BrowseResult *browseResults,
	UA_DiagnosticInfo *diagnosticInfos
);

typedef UA_Int32 UA_FNC_TRANSLATEBROWSEPATHSTONODEIDS(
	void *ensHandle, 
	const UA_RequestHeader *requestHeader, 
	UA_BrowsePath *browsePath,
	UA_UInt32 *indices, 
	UA_UInt32 indicesSize, 
	UA_BrowsePathResult *browsePathResults, 
	UA_DiagnosticInfo *diagnosticInfos
);

typedef UA_StatusCode UA_FNC_STARTNL(
	struct UA_ServerNetworkLayer *nl, 
	UA_Logger *logger
);

typedef UA_Int32 UA_FNC_NLGETWORK(
	struct UA_ServerNetworkLayer *nl, 
	UA_Job** jobs, 
	UA_UInt16 timeout
);

typedef UA_Int32 UA_FNC_STOPNL(
	struct UA_ServerNetworkLayer *nl, 
	UA_Job** jobs
);

typedef void UA_FNC_DELETENL(
	struct UA_ServerNetworkLayer *nl
);

	
#endif

